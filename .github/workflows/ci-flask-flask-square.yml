name: CI Pipeline

# Run the workflow on pushes or pull requests to the 'main' branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Python Tests Job
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      # Install dependencies for the backend
      - name: Install backend dependencies
        working-directory: flask-flask-square/backend  # Set the working directory
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run backend tests
      - name: Run backend tests
        working-directory: flask-flask-square/backend  # Set the working directory
        env:
          BACKEND_PORT: 3001  # Set environment variable for tests
        run: |
          pytest tests/

  # Docker Build and Test Job
  docker_build:
    runs-on: ubuntu-latest
    needs: test  # This job depends on the test job to succeed
    services:
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker Buildx (for multi-platform support)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build Backend Docker Image
      - name: Build backend image
        working-directory: flask-flask-square/backend  # Set working directory to backend
        run: |
          docker build -t backend:latest .

      # Build Frontend Docker Image
      - name: Build frontend image
        working-directory: flask-flask-square/frontend  # Set working directory to frontend
        run: |
          docker build -t frontend:latest .

      # Run Backend Container with BACKEND_PORT set to 3001
      - name: Run Backend Container
        run: |
          docker run -d --name backend -p 3001:3001 -e BACKEND_PORT=3001 backend:latest
          sleep 10  # Increase this value if the app needs more time to start
          curl http://localhost:3001/square?number=2

      # Run Frontend Container for testing
      - name: Run Frontend Container
        run: |
          docker run -d --name frontend -p 3000:3000 -e FRONTEND_PORT=3000 frontend:latest
          sleep 10
          curl http://localhost:3000/

      # Stop containers after tests
      - name: Stop Containers
        run: |
          docker stop backend frontend
